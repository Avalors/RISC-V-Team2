$version Generated by VerilatedVcd $end
$date Mon Nov 25 13:54:19 2024 $end
$timescale 1ps $end

 $scope module TOP $end
  $var wire 32 % a0 [31:0] $end
  $var wire  1 # clk $end
  $var wire  1 $ rst $end
  $scope module TopLevelCPU $end
   $var wire  3 7 ALUctrl [2:0] $end
   $var wire 32 , ALUop1 [31:0] $end
   $var wire 32 - ALUop2 [31:0] $end
   $var wire 32 . ALUout [31:0] $end
   $var wire  1 4 ALUsrc $end
   $var wire  1 / EQ $end
   $var wire 32 + ImmOp [31:0] $end
   $var wire  2 6 ImmSrc [1:0] $end
   $var wire 32 ) PC [31:0] $end
   $var wire  1 5 PCsrc $end
   $var wire 32 0 RD1 [31:0] $end
   $var wire 32 1 RD2 [31:0] $end
   $var wire  1 3 RegWrite $end
   $var wire 32 2 WD3 [31:0] $end
   $var wire 32 ( a0 [31:0] $end
   $var wire  1 & clk $end
   $var wire 32 * instr [31:0] $end
   $var wire  1 ' rst $end
   $scope module ALUOperandMux $end
    $var wire 32 B! DATA_WIDTH [31:0] $end
    $var wire 32 8 in0 [31:0] $end
    $var wire 32 9 in1 [31:0] $end
    $var wire 32 ; out [31:0] $end
    $var wire  1 : sel $end
   $upscope $end
   $scope module ArithmeticLogicUnit $end
    $var wire  3 > ALUctrl [2:0] $end
    $var wire 32 < ALUop1 [31:0] $end
    $var wire 32 = ALUop2 [31:0] $end
    $var wire  1 @ EQ $end
    $var wire 32 ? Result [31:0] $end
   $upscope $end
   $scope module InstructionMemory $end
    $var wire 32 C! ADDRESS_WIDTH [31:0] $end
    $var wire 32 B! DATA_WIDTH [31:0] $end
    $var wire  5 B addr [4:0] $end
    $var wire  1 A clk $end
    $var wire 32 C instr [31:0] $end
    $var wire 32 D rom_array[0] [31:0] $end
    $var wire 32 N rom_array[10] [31:0] $end
    $var wire 32 O rom_array[11] [31:0] $end
    $var wire 32 P rom_array[12] [31:0] $end
    $var wire 32 Q rom_array[13] [31:0] $end
    $var wire 32 R rom_array[14] [31:0] $end
    $var wire 32 S rom_array[15] [31:0] $end
    $var wire 32 T rom_array[16] [31:0] $end
    $var wire 32 U rom_array[17] [31:0] $end
    $var wire 32 V rom_array[18] [31:0] $end
    $var wire 32 W rom_array[19] [31:0] $end
    $var wire 32 E rom_array[1] [31:0] $end
    $var wire 32 X rom_array[20] [31:0] $end
    $var wire 32 Y rom_array[21] [31:0] $end
    $var wire 32 Z rom_array[22] [31:0] $end
    $var wire 32 [ rom_array[23] [31:0] $end
    $var wire 32 \ rom_array[24] [31:0] $end
    $var wire 32 ] rom_array[25] [31:0] $end
    $var wire 32 ^ rom_array[26] [31:0] $end
    $var wire 32 _ rom_array[27] [31:0] $end
    $var wire 32 ` rom_array[28] [31:0] $end
    $var wire 32 a rom_array[29] [31:0] $end
    $var wire 32 F rom_array[2] [31:0] $end
    $var wire 32 b rom_array[30] [31:0] $end
    $var wire 32 c rom_array[31] [31:0] $end
    $var wire 32 G rom_array[3] [31:0] $end
    $var wire 32 H rom_array[4] [31:0] $end
    $var wire 32 I rom_array[5] [31:0] $end
    $var wire 32 J rom_array[6] [31:0] $end
    $var wire 32 K rom_array[7] [31:0] $end
    $var wire 32 L rom_array[8] [31:0] $end
    $var wire 32 M rom_array[9] [31:0] $end
    $scope module unnamedblk1 $end
     $var wire 32 d i [31:0] $end
    $upscope $end
   $upscope $end
   $scope module PC_Reg $end
    $var wire 32 h ImmOp [31:0] $end
    $var wire 32 i PC [31:0] $end
    $var wire  1 g PCsrc $end
    $var wire 32 B! WIDTH [31:0] $end
    $var wire  1 e clk $end
    $var wire  1 f rst $end
   $upscope $end
   $scope module RegFile $end
    $var wire  5 m AD1 [4:0] $end
    $var wire  5 n AD2 [4:0] $end
    $var wire  5 o AD3 [4:0] $end
    $var wire 32 q RD1 [31:0] $end
    $var wire 32 r RD2 [31:0] $end
    $var wire 32 p WD3 [31:0] $end
    $var wire  1 l WE3 $end
    $var wire 32 s a0 [31:0] $end
    $var wire  1 j clk $end
    $var wire 32 t registers[0] [31:0] $end
    $var wire 32 ~ registers[10] [31:0] $end
    $var wire 32 !! registers[11] [31:0] $end
    $var wire 32 "! registers[12] [31:0] $end
    $var wire 32 #! registers[13] [31:0] $end
    $var wire 32 $! registers[14] [31:0] $end
    $var wire 32 %! registers[15] [31:0] $end
    $var wire 32 &! registers[16] [31:0] $end
    $var wire 32 '! registers[17] [31:0] $end
    $var wire 32 (! registers[18] [31:0] $end
    $var wire 32 )! registers[19] [31:0] $end
    $var wire 32 u registers[1] [31:0] $end
    $var wire 32 *! registers[20] [31:0] $end
    $var wire 32 +! registers[21] [31:0] $end
    $var wire 32 ,! registers[22] [31:0] $end
    $var wire 32 -! registers[23] [31:0] $end
    $var wire 32 .! registers[24] [31:0] $end
    $var wire 32 /! registers[25] [31:0] $end
    $var wire 32 0! registers[26] [31:0] $end
    $var wire 32 1! registers[27] [31:0] $end
    $var wire 32 2! registers[28] [31:0] $end
    $var wire 32 3! registers[29] [31:0] $end
    $var wire 32 v registers[2] [31:0] $end
    $var wire 32 4! registers[30] [31:0] $end
    $var wire 32 5! registers[31] [31:0] $end
    $var wire 32 w registers[3] [31:0] $end
    $var wire 32 x registers[4] [31:0] $end
    $var wire 32 y registers[5] [31:0] $end
    $var wire 32 z registers[6] [31:0] $end
    $var wire 32 { registers[7] [31:0] $end
    $var wire 32 | registers[8] [31:0] $end
    $var wire 32 } registers[9] [31:0] $end
    $var wire  1 k rst $end
    $scope module unnamedblk1 $end
     $var wire 32 6! i [31:0] $end
    $upscope $end
    $scope module unnamedblk2 $end
     $var wire 32 7! i [31:0] $end
    $upscope $end
   $upscope $end
   $scope module SignExtender $end
    $var wire 32 B! DATA_WIDTH [31:0] $end
    $var wire 12 8! ImmI [11:0] $end
    $var wire 32 :! ImmOp [31:0] $end
    $var wire  1 9! ImmSrc $end
   $upscope $end
   $scope module controlunit $end
    $var wire  3 A! ALUctrl [2:0] $end
    $var wire  1 >! ALUsrc $end
    $var wire  1 <! EQ $end
    $var wire  2 ?! ImmSrc [1:0] $end
    $var wire  7 D! OP_IMM [6:0] $end
    $var wire  7 E! OP_JAL [6:0] $end
    $var wire  1 @! PCsrc $end
    $var wire  1 =! RegWrite $end
    $var wire  7 ;! opcode [6:0] $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
1#
1$
b00000000000000000000000000000000 %
1&
1'
b00000000000000000000000000000000 (
b00000000000000000000000000000000 )
b00000000000100000000010100010011 *
b00000000000000000000000000000001 +
b00000000000000000000000000000000 ,
b00000000000000000000000000000001 -
b00000000000000000000000000000001 .
0/
b00000000000000000000000000000000 0
b00000000000000000000000000000000 1
b00000000000000000000000000000001 2
13
14
05
b00 6
b000 7
b00000000000000000000000000000000 8
b00000000000000000000000000000001 9
1:
b00000000000000000000000000000001 ;
b00000000000000000000000000000000 <
b00000000000000000000000000000001 =
b000 >
b00000000000000000000000000000001 ?
0@
1A
b00000 B
b00000000000100000000010100010011 C
b00000000000100000000010100010011 D
b00000000000101010000010100010011 E
b00000000000101010000010100010011 F
b00000000000101010000010100010011 G
b00000000000101010000010100010011 H
b00000000000000000000000001101111 I
b00000000000000000000000000010011 J
b00000000000000000000000000010011 K
b00000000000000000000000000010011 L
b00000000000000000000000000010011 M
b00000000000000000000000000010011 N
b00000000000000000000000000010011 O
b00000000000000000000000000010011 P
b00000000000000000000000000010011 Q
b00000000000000000000000000010011 R
b00000000000000000000000000010011 S
b00000000000000000000000000010011 T
b00000000000000000000000000010011 U
b00000000000000000000000000010011 V
b00000000000000000000000000010011 W
b00000000000000000000000000010011 X
b00000000000000000000000000010011 Y
b00000000000000000000000000010011 Z
b00000000000000000000000000010011 [
b00000000000000000000000000010011 \
b00000000000000000000000000010011 ]
b00000000000000000000000000010011 ^
b00000000000000000000000000010011 _
b00000000000000000000000000010011 `
b00000000000000000000000000010011 a
b00000000000000000000000000010011 b
b00000000000000000000000000010011 c
b00000000000000000000000000100000 d
1e
1f
0g
b00000000000000000000000000000001 h
b00000000000000000000000000000000 i
1j
1k
1l
b00000 m
b00001 n
b01010 o
b00000000000000000000000000000001 p
b00000000000000000000000000000000 q
b00000000000000000000000000000000 r
b00000000000000000000000000000000 s
b00000000000000000000000000000000 t
b00000000000000000000000000000000 u
b00000000000000000000000000000000 v
b00000000000000000000000000000000 w
b00000000000000000000000000000000 x
b00000000000000000000000000000000 y
b00000000000000000000000000000000 z
b00000000000000000000000000000000 {
b00000000000000000000000000000000 |
b00000000000000000000000000000000 }
b00000000000000000000000000000000 ~
b00000000000000000000000000000000 !!
b00000000000000000000000000000000 "!
b00000000000000000000000000000000 #!
b00000000000000000000000000000000 $!
b00000000000000000000000000000000 %!
b00000000000000000000000000000000 &!
b00000000000000000000000000000000 '!
b00000000000000000000000000000000 (!
b00000000000000000000000000000000 )!
b00000000000000000000000000000000 *!
b00000000000000000000000000000000 +!
b00000000000000000000000000000000 ,!
b00000000000000000000000000000000 -!
b00000000000000000000000000000000 .!
b00000000000000000000000000000000 /!
b00000000000000000000000000000000 0!
b00000000000000000000000000000000 1!
b00000000000000000000000000000000 2!
b00000000000000000000000000000000 3!
b00000000000000000000000000000000 4!
b00000000000000000000000000000000 5!
b00000000000000000000000000100000 6!
b00000000000000000000000000000000 7!
b000000000001 8!
09!
b00000000000000000000000000000001 :!
b0010011 ;!
0<!
1=!
1>!
b00 ?!
0@!
b000 A!
b00000000000000000000000000100000 B!
b00000000000000000000000000000101 C!
b0010011 D!
b1101111 E!
#1
0#
0&
0A
0e
0j
#2
1#
1&
1A
1e
1j
b00000000000000000000000000100000 7!
#3
0#
0&
0A
0e
0j
#4
1#
1&
1A
1e
1j
#5
0#
0&
0A
0e
0j
#6
1#
1&
1A
1e
1j
#7
0#
0&
0A
0e
0j
#8
1#
1&
1A
1e
1j
#9
0#
0&
0A
0e
0j
#10
1#
0$
b00000000000000000000000000000001 %
1&
0'
b00000000000000000000000000000001 (
b00000000000000000000000000000001 )
1A
1e
0f
b00000000000000000000000000000001 i
1j
0k
b00000000000000000000000000000001 s
b00000000000000000000000000000001 ~
#11
0#
0&
0A
0e
0j
#12
1#
1&
b00000000000000000000000000000010 )
1A
1e
b00000000000000000000000000000010 i
1j
#13
0#
0&
0A
0e
0j
#14
1#
1&
b00000000000000000000000000000011 )
1A
1e
b00000000000000000000000000000011 i
1j
#15
0#
0&
0A
0e
0j
#16
1#
1&
b00000000000000000000000000000100 )
b00000000000101010000010100010011 *
b00000000000000000000000000000010 .
b00000000000000000000000000000001 0
b00000000000000000000000000000010 2
b00000000000000000000000000000001 <
b00000000000000000000000000000010 ?
1A
b00001 B
b00000000000101010000010100010011 C
1e
b00000000000000000000000000000100 i
1j
b01010 m
b00000000000000000000000000000010 p
b00000000000000000000000000000001 q
#17
0#
0&
0A
0e
0j
#18
1#
b00000000000000000000000000000010 %
1&
b00000000000000000000000000000010 (
b00000000000000000000000000000101 )
b00000000000000000000000000000011 .
b00000000000000000000000000000010 0
b00000000000000000000000000000011 2
b00000000000000000000000000000010 <
b00000000000000000000000000000011 ?
1A
1e
b00000000000000000000000000000101 i
1j
b00000000000000000000000000000011 p
b00000000000000000000000000000010 q
b00000000000000000000000000000010 s
b00000000000000000000000000000010 ~
#19
0#
0&
0A
0e
0j
#20
1#
b00000000000000000000000000000011 %
1&
b00000000000000000000000000000011 (
b00000000000000000000000000000110 )
b00000000000000000000000000000100 .
b00000000000000000000000000000011 0
b00000000000000000000000000000100 2
b00000000000000000000000000000011 <
b00000000000000000000000000000100 ?
1A
1e
b00000000000000000000000000000110 i
1j
b00000000000000000000000000000100 p
b00000000000000000000000000000011 q
b00000000000000000000000000000011 s
b00000000000000000000000000000011 ~
#21
0#
0&
0A
0e
0j
#22
1#
b00000000000000000000000000000100 %
1&
b00000000000000000000000000000100 (
b00000000000000000000000000000111 )
b00000000000000000000000000000101 .
b00000000000000000000000000000100 0
b00000000000000000000000000000101 2
b00000000000000000000000000000100 <
b00000000000000000000000000000101 ?
1A
1e
b00000000000000000000000000000111 i
1j
b00000000000000000000000000000101 p
b00000000000000000000000000000100 q
b00000000000000000000000000000100 s
b00000000000000000000000000000100 ~
#23
0#
0&
0A
0e
0j
#24
1#
b00000000000000000000000000000101 %
1&
b00000000000000000000000000000101 (
b00000000000000000000000000001000 )
b00000000000000000000000000000110 .
b00000000000000000000000000000101 0
b00000000000000000000000000000110 2
b00000000000000000000000000000101 <
b00000000000000000000000000000110 ?
1A
b00010 B
1e
b00000000000000000000000000001000 i
1j
b00000000000000000000000000000110 p
b00000000000000000000000000000101 q
b00000000000000000000000000000101 s
b00000000000000000000000000000101 ~
#25
0#
0&
0A
0e
0j
#26
1#
b00000000000000000000000000000110 %
1&
b00000000000000000000000000000110 (
b00000000000000000000000000001001 )
b00000000000000000000000000000111 .
b00000000000000000000000000000110 0
b00000000000000000000000000000111 2
b00000000000000000000000000000110 <
b00000000000000000000000000000111 ?
1A
1e
b00000000000000000000000000001001 i
1j
b00000000000000000000000000000111 p
b00000000000000000000000000000110 q
b00000000000000000000000000000110 s
b00000000000000000000000000000110 ~
#27
0#
0&
0A
0e
0j
#28
1#
b00000000000000000000000000000111 %
1&
b00000000000000000000000000000111 (
b00000000000000000000000000001010 )
b00000000000000000000000000001000 .
b00000000000000000000000000000111 0
b00000000000000000000000000001000 2
b00000000000000000000000000000111 <
b00000000000000000000000000001000 ?
1A
1e
b00000000000000000000000000001010 i
1j
b00000000000000000000000000001000 p
b00000000000000000000000000000111 q
b00000000000000000000000000000111 s
b00000000000000000000000000000111 ~
#29
0#
0&
0A
0e
0j
#30
1#
b00000000000000000000000000001000 %
1&
b00000000000000000000000000001000 (
b00000000000000000000000000001011 )
b00000000000000000000000000001001 .
b00000000000000000000000000001000 0
b00000000000000000000000000001001 2
b00000000000000000000000000001000 <
b00000000000000000000000000001001 ?
1A
1e
b00000000000000000000000000001011 i
1j
b00000000000000000000000000001001 p
b00000000000000000000000000001000 q
b00000000000000000000000000001000 s
b00000000000000000000000000001000 ~
#31
0#
0&
0A
0e
0j
